mutation SignIn($userId: String!, $password: String!) {
    signin(userId: $userId, password: $password) {
        token
    }
}

query MyChatrooms($userId: String) {
    chatRooms(where: { admins_some: { userId: $userId }}) {
        ...ChatRoomApolloFragment
    }
}

query MessageSummaries($myId: String!, $pageCount: Int!, $startCursor: String) {
    messageSummaries(
                     where: {
                     receiver : {
                     userId_in: [ $myId ]
                     }
                     },
                     first: $pageCount
                     after: $startCursor
                     ) {
        ... MessageSummaryApolloFragment
    }
}

query Messages($chatRoomId: ID!, $myId: String!, $userId: String!, $pageCount: Int!, $startCursor: String) {
    messages(
             where:{
             chatRoom: {
             id: $chatRoomId
             }
             receivers_some : {
             userId_in: [ $myId, $userId ]
             }
             sender: {
             userId_in : [ $myId, $userId ]
             }
             },
             first: $pageCount
             after: $startCursor
             ) {
        ... MessageApolloFragment
    }
}

query Me {
    me {
        ...UserApolloFragment
    }
}

subscription MessageSubscription {
    message {
        ... MessageSubscriptionPayloadApolloFragment
    }
}

mutation SendMessage($text: String!, $chatRoomId: ID!, $receiverId: ID!, $fileIds: [ID!]!) {
    sendMessage(data: {
                text : $text
                chatRoomId : $chatRoomId
                fileIds : $fileIds
                receiverIds : [$receiverId]
                }) {
        ... MessageApolloFragment
    }
}

fragment UserApolloFragment on User {
    id
    type
    role
    userId
    name
    profileImageUrl
    phoneNumber
}

fragment KidApolloFragment on Kid {
    id
    name
    parents { ...UserApolloFragment }
}

fragment ChatRoomApolloFragment on ChatRoom {
    id
    name
    admins { ...UserApolloFragment }
    users { ...UserApolloFragment }
    kids { ...KidApolloFragment }
    inviteCode,
    chatRoomAt
    createdAt
}

fragment MessageSubscriptionPayloadApolloFragment on MessageSubscriptionPayload {
    mutation
    node { ...MessageApolloFragment }
    updatedFields
    previousValues {...MessagePreviousValuesApolloFragment}
}

fragment MessageApolloFragment on Message {
    id
    chatRoom { id }
    text
    receivers {
        userId
        profileImageUrl
        name
    }
    sender {
        userId
        profileImageUrl
        name
    }
    createdAt
    readedAt
}

fragment MessagePreviousValuesApolloFragment on MessagePreviousValues {
    id
    text
    createdAt
    readedAt
}

fragment MessageSummaryApolloFragment on MessageSummary {
    id
    chatRoom { id, name }
    sender { ...UserApolloFragment },
    receiver { ...UserApolloFragment },
    unReadMessageCount,
    lastMessage { ...MessageApolloFragment }
    createdAt
}
